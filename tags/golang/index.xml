<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on (def Think humble, think free) --&gt; </title>
    <link>https://mallozup.github.io/tags/golang/</link>
    <description>Recent content in golang on (def Think humble, think free) --&gt; </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Dec 2020 14:36:38 +0100</lastBuildDate>
    
	<atom:link href="https://mallozup.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>an humble gRPC rate-limiting tutorial</title>
      <link>https://mallozup.github.io/posts/grpc-ratelimiting/</link>
      <pubDate>Wed, 30 Dec 2020 14:36:38 +0100</pubDate>
      
      <guid>https://mallozup.github.io/posts/grpc-ratelimiting/</guid>
      <description>Summary:  1) Rationale 2) Live Demo 3) Some Code details 4) Disclaimer  1) Rationale: Today I want to show you a possible solution, to a well-known problem when dealing with backend APIs or/and WEB applications.
The problem: imagine today is a special day, like 1 week before Christmas. Your servers will probably reach an abnormal higher number of client request.
If you don&amp;rsquo;t have a mechanism for limiting the number of requests, your servers resources, your servers or/and application will crash, or having a bad behaviour which will be probably will led to a massive service outage.</description>
    </item>
    
  </channel>
</rss>