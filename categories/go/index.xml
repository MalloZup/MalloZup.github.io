<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on Dario Maiocchi</title>
    <link>https://mallozup.github.io/categories/go/</link>
    <description>Recent content in go on Dario Maiocchi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Mar 2021 10:49:37 +0200</lastBuildDate>
    
	<atom:link href="https://mallozup.github.io/categories/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Some fondamentals for web application and microservices in golang</title>
      <link>https://mallozup.github.io/posts/fondamentals-webapp-golang/</link>
      <pubDate>Mon, 29 Mar 2021 10:49:37 +0200</pubDate>
      
      <guid>https://mallozup.github.io/posts/fondamentals-webapp-golang/</guid>
      <description>Intro: I will write in this post about some useful concept you need for building web application in golang. Also I will compare such approaches to other languages and upstream approaches from my developer experience.
1) Web toolkit are the golang minimalist answer against complexity of frameworks Choosing a framework is a safe choice. People has already solved the problem for you. Really ?? It depends. Adopting a framework can be quite considerable risk.</description>
    </item>
    
  </channel>
</rss>